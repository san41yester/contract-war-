/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "interfaceiio.sol";

// This is class that describes you smart contract.
contract gameunit is interfaceiio {
    // Contract can have an instance variables.
    // In this example instance variable `timestamp` is used to store the time of `constructor` or `touch`
    // function call
    uint public powerofattack;
    uint public defense;
    uint public health;
    uint p;
    

    address public calleraddress;

    modifier checkOwnerAndAccept {
        require(msg.pubkey() == tvm.pubkey(), 100);
		tvm.accept();
		_;
	}
    

 //атаковать 
    function attack(interfaceiio myaddress) public {
        tvm.accept();
        p=mygetpowerofattack();
        myaddress.acceptwar(p);
        
    }

    function acceptwar(uint pow) external override{
        calleraddress = msg.sender;
        
        if (health> pow - defense){
        tvm.accept();
        //save address of caller
        
        health = health - pow + defense;
        } else {
        
        sendallvalanddestroy(calleraddress);
        }

    }
    

   

    function mygetpowerofattack() public view returns (uint) {
        tvm.accept();
        return powerofattack;
    }
    function mygetdefense() public view returns (uint) {
        tvm.accept();
        return defense;
    }

    function mygethealth() public view returns (uint) {
        tvm.accept();
        return health;
    }

    function mygetaddress() public view returns (address) {
        tvm.accept();
        return calleraddress;
    }

    function sendallvalanddestroy(address dest) public {
        tvm.accept();
        dest.transfer(9, true, 160);
    }


    
}
